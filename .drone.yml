---
kind: pipeline
type: docker
name: default

steps:

- name: restore-cache-with-filesystem
  image: meltwater/drone-cache:latest
  pull: true
  settings:
    backend: "filesystem"
    restore: true
    cache_key: "volume"
    filesystem_cache_root: "/var/lib/drone/cache"
    mount:
      - 'dl'
      - 'ccache'
  volumes:
  - name: cache
    path: /var/lib/drone/cache

- name: createimage
  image: docker:latest
  volumes:
  - name: docker_sock
    path: /var/run/docker.sock
  commands:
  - ls -l ./
  - ls -l /var/run/
  - docker build -t unitv2_builder .
  - chmod -R o+rw ./

- name: secrets
  image: unitv2_builder
  pull: if-not-exists
  environment:
    SSH_KEY:
      from_secret: tftp_ssh_key
  commands:
    - mkdir ./secrets/ && echo "$SSH_KEY" > ./secrets/tftp_ssh_key && chmod 0600 ./secrets/tftp_ssh_key

- name: bootstrap
  image: unitv2_builder
  pull: if-not-exists
  commands:
  - make bootstrap

- name: download
  image: unitv2_builder
  pull: if-not-exists
  commands:
  - make buildroot-dl
  - make buildroot-rescue-dl

- name: rebuild-cache-with-filesystem
  image: meltwater/drone-cache:latest
  pull: true
  settings:
    backend: "filesystem"
    rebuild: true
    cache_key: "volume"
    filesystem_cache_root: "/var/lib/drone/cache"
    mount:
      - 'dl'
      - 'ccache'
  volumes:
  - name: cache
    path: /var/lib/drone/cache

- name: main
  image: unitv2_builder
  pull: if-not-exists
  commands:
  - make
  - ls outputs/

- name: toolchain
  image: unitv2_builder
  pull: if-not-exists
  commands:
  - make buildroot-toolchain
  - ls outputs/

- name: publish
  image: plugins/github-release
  settings:
    api_key:
      from_secret: deploy_key
    files:
      - outputs/*
    checksum:
      - sha256
      - sha512
  when:
    event: tag

volumes:
  - name: cache
    host: 
      path: /var/lib/drone/cache
  - name: docker_sock
    host:
      path: /var/run/docker.sock

...
